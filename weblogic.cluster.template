{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Template para weblogic cluster",

  "Parameters" : {

    "KeyName" : {
      "Default": "website",
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type" : "String"
    },

    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "m1.small",
      "AllowedValues" : ["m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","m3.xlarge","m3.2xlarge","c1.medium","c1.xlarge","cc1.4xlarge","cc2.8xlarge","cg1.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "AdminPassword": {
      "Default": "lunes123",
      "Description" : "Weblogic admin account password (user: weblogic)",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "41",
      "AllowedPattern" : "[a-zA-Z0-9]*",
      "ConstraintDescription" : "must contain only alphanumeric characters."
    },

    "ClusterName": {
      "Default": "webCluster",
      "Description" : "Nombre del Cluster",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },

    "DomainName": {
      "Default": "bicevida",
      "Description" : "Nombre del domain",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },

    "BucketName" : {
      "Default": "cl.bicevida.weblogic",
      "Description" : "Nombre del Bucket donde estan todas las cosas",
      "Type"        : "String"
    }
  },

  "Resources" : {

    "WebServerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP access via port 80 and SSH access",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "8080", "ToPort" : "8080", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "7001", "ToPort" : "7001", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "7002", "ToPort" : "7002", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "7003", "ToPort" : "7003", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "7502", "ToPort" : "7502", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "7503", "ToPort" : "7503", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "5556", "ToPort" : "5556", "CidrIp" : "0.0.0.0/0"}
        ]
      }
    },

    "AdminServer" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : ["", ["https://s3-", { "Ref" : "AWS::Region" }, ".amazonaws.com/", { "Ref" : "BucketName" },"/templates/weblogic.admin.template"]] },
        "Parameters" : {
          "KeyName" : { "Ref" : "KeyName" },
          "InstanceType" : { "Ref" : "InstanceType" },
          "AdminPassword": { "Ref" : "AdminPassword" },
          "ClusterName" : { "Ref" : "ClusterName" },
          "DomainName": { "Ref" : "DomainName" },
          "BucketName": { "Ref" : "BucketName"},
          "SecurityGroupName": { "Ref": "WebServerSecurityGroup"}
        }
      }
    },
    "ManagedServer" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : ["", ["https://s3-", { "Ref" : "AWS::Region" }, ".amazonaws.com/", { "Ref" : "BucketName" },"/templates/weblogic.managed.template"]] },
        "Parameters" : {
          "KeyName" : { "Ref" : "KeyName" },
          "InstanceType" : { "Ref" : "InstanceType" },
          "AdminPassword": { "Ref" : "AdminPassword" },
          "ClusterName" : { "Ref" : "ClusterName" },
          "DomainName": { "Ref" : "DomainName" },
          "BucketName": { "Ref" : "BucketName"},
          "SecurityGroupName":{ "Ref": "WebServerSecurityGroup"},
          "AdminPublicDNS": { "Fn::GetAtt" : [ "AdminServer", "Outputs.PublicDNS" ]}
        }
      }
    },

    "ClusterGroup" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : ["", ["https://s3-", { "Ref" : "AWS::Region" }, ".amazonaws.com/", { "Ref" : "BucketName" },"/templates/weblogic.autoscaling.template"]] },
        "Parameters" : {
          "KeyName" : { "Ref" : "KeyName" },
          "InstanceType" : { "Ref" : "InstanceType" },
          "AdminPassword": { "Ref" : "AdminPassword" },
          "ClusterName" : { "Ref" : "ClusterName" },
          "DomainName": { "Ref" : "DomainName" },
          "BucketName": { "Ref" : "BucketName"},
          "SecurityGroupName":{ "Ref": "WebServerSecurityGroup"},
          "WebServerCapacity" : "1",
          "AdminPublicDNS": { "Fn::GetAtt" : [ "AdminServer", "Outputs.PublicDNS" ]}
        }
      }
    },

    "ELBServer" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : ["", ["https://s3-", { "Ref" : "AWS::Region" }, ".amazonaws.com/", { "Ref" : "BucketName" },"/templates/weblogic.lb.template"]] },
        "Parameters" : {
          "KeyName" : { "Ref" : "KeyName" },
          "InstanceType" : "t1.micro",
          "BucketName": { "Ref" : "BucketName"},
          "SecurityGroupName":{ "Ref": "WebServerSecurityGroup"},
          "AdminPublicDNS": { "Fn::GetAtt" : [ "AdminServer", "Outputs.PublicDNS" ]},
          "ManagedPublicDNS": { "Fn::GetAtt" : [ "ManagedServer", "Outputs.PublicDNS" ]}
        }
      }
    },

    "ELBServerB" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : ["", ["https://s3-", { "Ref" : "AWS::Region" }, ".amazonaws.com/", { "Ref" : "BucketName" },"/templates/weblogic.lb.template"]] },
        "Parameters" : {
          "KeyName" : { "Ref" : "KeyName" },
          "InstanceType" : "t1.micro",
          "BucketName": { "Ref" : "BucketName"},
          "SecurityGroupName":{ "Ref": "WebServerSecurityGroup"},
          "AdminPublicDNS": { "Fn::GetAtt" : [ "AdminServer", "Outputs.PublicDNS" ]},
          "ManagedPublicDNS": { "Fn::GetAtt" : [ "ManagedServer", "Outputs.PublicDNS" ]}
        }
      }
    },

    "ElasticLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Metadata" : {
        "Comment" : "Configure the Load Balancer with a simple health check and cookie-based stickiness"
      },
      "Properties" : {
        "AvailabilityZones" : ["us-west-2a"],
        "Instances" : [{ "Fn::GetAtt" : [ "ELBServer", "Outputs.InstanceId" ]}, { "Fn::GetAtt" : [ "ELBServerB", "Outputs.InstanceId" ]}],
        "LBCookieStickinessPolicy" : [ {
          "PolicyName" : "CookieBasedPolicy",
          "CookieExpirationPeriod" : "30"
        } ],
        "Listeners" : [ {
            "LoadBalancerPort" : "80",
            "InstancePort" : "80",
            "Protocol" : "HTTP",
            "PolicyNames" : [ "CookieBasedPolicy" ]
          },
            "LoadBalancerPort" : "8080",
            "InstancePort" : "8080",
            "Protocol" : "HTTP",
            "PolicyNames" : [ "CookieBasedPolicy" ]
          },
        ],
        "HealthCheck" : {
          "Target" : "HTTP:80/",
          "HealthyThreshold" : "2",
          "UnhealthyThreshold" : "5",
          "Interval" : "10",
          "Timeout" : "5"
        }
      }
    }
  },
  "Outputs" : {
    "ConsoleURL" : {
      "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "ElasticLoadBalancer", "DNSName" ]},":8080/console"]] },
      "Description" : "Console Admin URLS"
    }
  }
}
