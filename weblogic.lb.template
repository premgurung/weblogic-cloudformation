{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Template para weblogic cluster",

  "Parameters" : {

    "KeyName" : {
      "Default": "website",
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type" : "String"
    },

    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "t1.micro",
      "AllowedValues" : ["t1.micro", "m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","m3.xlarge","m3.2xlarge","c1.medium","c1.xlarge","cc1.4xlarge","cc2.8xlarge","cg1.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "BucketName" : {
      "Default": "cl.bicevida.weblogic",
      "Description" : "Nombre del Bucket donde estan todas las cosas",
      "Type"        : "String"
    },

    "AdminPublicDNS" : {
      "Description" : "DNS publico de servidor admin",
      "Type"        : "String"
    },
    "ManagedPublicDNS" : {
      "Description" : "DNS publico de uno de los managed servers",
      "Type"        : "String"
    },
    "SecurityGroupName" : {
      "Description" : "Nombre del grupo de seguridad",
      "Type"        : "String"
    }

    

  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "64" },
      "m1.small"    : { "Arch" : "64" },
      "m1.medium"   : { "Arch" : "64" },
      "m1.large"    : { "Arch" : "64" },
      "m1.xlarge"   : { "Arch" : "64" },
      "m2.xlarge"   : { "Arch" : "64" },
      "m2.2xlarge"  : { "Arch" : "64" },
      "m2.4xlarge"  : { "Arch" : "64" },
      "m3.xlarge"   : { "Arch" : "64" },
      "m3.2xlarge"  : { "Arch" : "64" },
      "c1.medium"   : { "Arch" : "64" },
      "c1.xlarge"   : { "Arch" : "64" }
    },

    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "32" : "ami-5675ee3f", "64" : "ami-3275ee5b", "64HVM" : "ami-a8cd60c1" },
      "us-west-2"      : { "32" : "ami-d0be2ae0", "64" : "ami-ecbe2adc", "64HVM" : "NOT_YET_SUPPORTED" },
      "us-west-1"      : { "32" : "ami-d8d1fc9d", "64" : "ami-66d1fc23", "64HVM" : "NOT_YET_SUPPORTED" },
      "eu-west-1"      : { "32" : "ami-6893991c", "64" : "ami-44939930", "64HVM" : "ami-67555113" },
      "ap-southeast-1" : { "32" : "ami-a29ed2f0", "64" : "ami-aa9ed2f8", "64HVM" : "NOT_YET_SUPPORTED" },
      "ap-southeast-2" : { "32" : "ami-0f3fbf0e", "64" : "ami-173fbf16", "64HVM" : "NOT_YET_SUPPORTED" },
      "ap-northeast-1" : { "32" : "ami-383eaf02", "64" : "ami-363eaf0c", "64HVM" : "NOT_YET_SUPPORTED" },
      "sa-east-1"      : { "32" : "ami-a56bb0b8", "64" : "ami-dd6bb0c0", "64HVM" : "NOT_YET_SUPPORTED" }
    }
  },

  "Resources" : {
    "CfnUser" : {
      "Type" : "AWS::IAM::User",
      "Properties" : {
        "Path": "/",
        "Policies": [{
          "PolicyName": "root",
          "PolicyDocument": { "Statement":[{
            "Effect"   : "Allow",
            "Action"   : ["cloudformation:DescribeStackResource","s3:GetObject"],
            "Resource" :"*"
          }]}
        }]
      }
    },

    "CfnKeys" : {
      "Type" : "AWS::IAM::AccessKey",
      "Properties" : {"UserName" : {"Ref": "CfnUser"}}
    },

    "BucketPolicy" : {
      "Type" : "AWS::S3::BucketPolicy",
      "Properties" : {
        "PolicyDocument": {
          "Version"      : "2008-10-17",
          "Id"           : "MyPolicy",
          "Statement"    : [{
            "Sid"        : "ReadAccess and WriteAccess",
            "Action"     : ["s3:GetObject","s3:PutObject"],
            "Effect"     : "Allow",
            "Resource"   : { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "BucketName" },"/*"]]},
            "Principal"  : { "AWS": {"Fn::GetAtt" : ["CfnUser", "Arn"]} }
          }]
        },
        "Bucket" : { "Ref" : "BucketName" }
      }
    },
    
    "ElbServer": {
      "Type": "AWS::EC2::Instance",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "packages" : {
              "yum" : {
                "httpd"             : [],
                "compat-libstdc++*" : []
              }
            },
            "sources" : {
              "/tmp/": "https://github.com/pcortezc/weblogic-cloudformation/archive/master.zip"
            },
            "files" : {
              "/etc/httpd/modules/mod_wl_22.so" : {
                "source" : { "Fn::Join" : ["", ["https://s3-", { "Ref" : "AWS::Region" }, ".amazonaws.com/", { "Ref" : "BucketName" },"/modules/mod_wl_22.so"]] },
                "mode"   : "000755",
                "owner"  : "root",
                "group"  : "root",
                "authentication" : "S3AccessCreds"
              },
              "/etc/httpd/conf.d/weblogic.conf" : {
                "content" : { "Fn::Join" : ["", [
                  "listen 8080\n",
                  "<VirtualHost *:8080>\n",
                  "\tDocumentRoot /var/www/html\n",
                  "\tServerName localhost\n",
                  "\t<IfModule mod_weblogic.c>\n",
                  "\t\tSetHandler weblogic-handler\n",
                  "\t\tWeblogicHost ",{ "Ref" : "AdminPublicDNS" },"\n",
                  "\t\tWebLogicPort 7001\n",
                  "\t\tMatchExpression *.jsp\n",
                  "\t</IfModule>\n",
                  "</VirtualHost>\n",

                  "<VirtualHost *:80>\n",
                  "\tDocumentRoot /var/www/html\n",
                  "\tServerName localhost\n",
                  "\t<IfModule mod_weblogic.c>\n",
                  "\t\tSetHandler weblogic-handler\n",
                  "\t\tWebLogicCluster ",{ "Ref" : "AdminPublicDNS" },":7003,",{ "Ref" : "ManagedPublicDNS" },":7003\n",
                  "\t\tMatchExpression *.jsp\n",
                  "\t\tDebug ON\n",
                  "\t\tDebugConfigInfo ON\n",
                  "\t\tWLLogFile /tmp/weblogic.log\n",
                  "\t</IfModule>\n",
                  "</VirtualHost>\n"
                ]]},
                "mode"   : "000644",
                "owner"  : "root",
                "group"  : "root"
              }
            },
            "services" : {
              "sysvinit" : {
                "httpd"    : { "enabled" : "true", "ensureRunning" : "true" }
              }
            }
          }
        },
        "AWS::CloudFormation::Authentication" : {
          "S3AccessCreds" : {
            "type" : "S3",
            "accessKeyId" : { "Ref" : "CfnKeys" },
            "secretKey" : {"Fn::GetAtt": ["CfnKeys", "SecretAccessKey"]},
            "buckets" : [ { "Ref" : "BucketName" } ]
          }
        }
      },
      "Properties": {
        "ImageId": { "Fn::FindInMap":["AWSRegionArch2AMI", { "Ref" : "AWS::Region" },{ "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ]}]},
        "AvailabilityZone" : "us-west-2a",
        "InstanceType"   : { "Ref" : "InstanceType" },
        "SecurityGroups" : [ { "Ref": "SecurityGroupName"} ],
        "KeyName"        : { "Ref" : "KeyName" },
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -v\n",
          "yum update -y aws-cfn-bootstrap\n",

          "# Helper function\n",
          "function error_exit\n",
          "{\n",
          "  /opt/aws/bin/cfn-signal -e 1 -r \"$1\" '", { "Ref" : "WaitHandleELB" }, "'\n",
          "  exit 1\n",
          "}\n",

          "# Install Apache Web Server\n",
          "/opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackId" }, " -r ElbServer ",
          "    --region ", { "Ref" : "AWS::Region" }, " || error_exit 'Failed to run cfn-init'\n",

          "sed -i \"/mod_version.so/a\\LoadModule weblogic_module modules/mod_wl_22.so\" /etc/httpd/conf/httpd.conf\n",
          "chkconfig httpd on\n",

          "# Restart apache (httpd)\n",
          "service httpd restart\n",

          "# All is well so signal success\n",
          "/opt/aws/bin/cfn-signal -e 0 -r \"Weblogic setup complete\" '", { "Ref" : "WaitHandleELB" }, "'\n"
        ]]}}
      }
    },

    "WaitHandleELB" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },
    "WaitConditionELB" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "ElbServer",
      "Properties" : {
        "Handle" : {"Ref" : "WaitHandleELB"},
        "Timeout" : "3600"
      }
    }
  },
  "Outputs" : {
    "PublicDNS" : {
      "Value" : { "Fn::Join" : ["", [{ "Fn::GetAtt" : [ "ElbServer", "PublicDnsName" ]}]] },
      "Description" : "App server URLS"
    }
  }
}